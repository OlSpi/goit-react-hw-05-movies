{"version":3,"file":"static/js/298.ee5fb097.chunk.js","mappings":"6OAiBA,EAfmB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACpB,OACE,8BACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,yBAAG,WACM,0BAAOA,EAAOC,aAEvB,uBAAID,EAAOE,YAJJF,EAAOG,GADC,KAUxB,E,2BC8BD,EAvCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMI,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAiBJ,GAF1B,OAERK,EAFQ,OAIdV,EAAWU,GAJG,gDAMdR,EAAS,KAAMS,SAND,yBAQdP,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACS,EAAA,EAAD,IACbX,IAAS,yBAAMA,IAEdE,GAAgC,IAAnBV,EAAQoB,QAGrB,yBACE,SAAC,EAAD,CAAYpB,QAASA,OAHvB,yBAAK,+CAQZ,C,+LC1CKqB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAS,mCAAG,sGACAC,EAAAA,EAAAA,IACrB,+DACAN,GAHqB,cACjBJ,EADiB,OAKfW,EAAYX,EAASY,KAArBD,QALe,kBAOhBA,GAPgB,2CAAH,qDAUTE,EAAS,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,0DAC+BI,EAD/B,8CAEpBV,GAHqB,cACjBW,EADiB,OAMfJ,EAAYI,EAAQH,KAApBD,QANe,kBAQhBA,GARgB,2CAAH,sDAWTK,EAAgB,mCAAG,WAAMrB,GAAN,yFACPe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,mBAErBS,GAH4B,cACxBJ,EADwB,OAKtBY,EAASZ,EAATY,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBK,EAAgB,mCAAG,WAAMtB,GAAN,yFACPe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,2BAErBS,GAH4B,cACxBJ,EADwB,OAKtBkB,EAASlB,EAASY,KAAlBM,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBnB,EAAgB,mCAAG,WAAMJ,GAAN,yFACPe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,kCAErBS,GAH4B,cACxBJ,EADwB,OAKtBW,EAAYX,EAASY,KAArBD,QALsB,kBAMvBA,GANuB,2CAAH,qD","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ReviewItem = ({ reviews }) => {\n  return (\n    <>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>\n            Author:<span>{review.author}</span>\n          </p>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default ReviewItem;\n\nReviewItem.propTypes = {\n  reviews: PropTypes.array,\n};\n","import Loader from 'components/Loader/Loader';\nimport ReviewItem from 'components/ReviewItem/ReviewItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'services/getMovies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const response = await getMoviesReviews(movieId);\n\n        setReviews(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n\n      {!isLoading && reviews.length === 0 ? (\n        <div>We don't have any reviews for this movie</div>\n      ) : (\n        <ul>\n          <ReviewItem reviews={reviews} />\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNGZmMTg3MzZjZTY2MDU0OTFjOGRiOGU5NTM4ZmNiZiIsInN1YiI6IjY0YWFhYTI0YjY4NmI5MDBhZjllMzAzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZFHoZbG_T5mmqJXFYzBCzmy8I8U9mbqm_qZxq2TKF-I',\n  },\n};\n\nexport const getTrends = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const getMovies = async query => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n\n  const { results } = respons.data;\n\n  return results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const { data } = response;\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["reviews","map","review","author","content","id","useState","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getMoviesReviews","response","message","Loader","length","options","method","headers","accept","Authorization","getTrends","axios","results","data","getMovies","query","respons","getMoviesDetails","getMoviesCredits","cast"],"sourceRoot":""}