{"version":3,"file":"static/js/673.5038b025.chunk.js","mappings":"6OACA,EAAuB,yBAAvB,EAA2D,6B,kBCuB3D,EAnBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACfA,EAAMC,OACJ,eAAIJ,UAAWC,EAAf,UACE,SAAC,KAAD,CAAYI,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMV,GAAtD,UACE,uBAAIK,EAAMC,WAFoBD,EAAMG,IAKtC,IAPW,OAYxB,E,kBCqBD,EArCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdR,EAAUQ,GAHI,gDAKdN,EAAS,EAAD,IALM,yBAOdE,GAAa,GAPC,4EAAH,qDAWfE,GACD,GAAE,KAGD,gCACGH,IAAa,SAACM,EAAA,EAAD,IACbR,IAAS,yBAAMA,KAEdE,GAAahB,IACb,UAAC,KAAD,YACE,wBAAI,oBAEJ,SAACuB,EAAD,CAAYvB,OAAQA,SAK7B,C,+LCvCKwB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOR,EAAS,mCAAG,sGACAS,EAAAA,EAAAA,IACrB,+DACAL,GAHqB,cACjBM,EADiB,OAKfC,EAAYD,EAAST,KAArBU,QALe,kBAOhBA,GAPgB,2CAAH,qDAUTC,EAAS,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,0DAC+BI,EAD/B,8CAEpBT,GAHqB,cACjBU,EADiB,OAMfH,EAAYG,EAAQb,KAApBU,QANe,kBAQhBA,GARgB,2CAAH,sDAWTI,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,mBAErBZ,GAH4B,cACxBM,EADwB,OAKtBT,EAASS,EAATT,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBgB,EAAgB,mCAAG,WAAMD,GAAN,yFACPP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,2BAErBZ,GAH4B,cACxBM,EADwB,OAKtBQ,EAASR,EAAST,KAAlBiB,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBC,EAAgB,mCAAG,WAAMH,GAAN,yFACPP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,kCAErBZ,GAH4B,cACxBM,EADwB,OAKtBC,EAAYD,EAAST,KAArBU,QALsB,kBAMvBA,GANuB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/TrendsList/TrendsList.module.css?620a","components/TrendsList/TrendsList.jsx","pages/Home.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendsList_list__-BgK1\",\"listItem\":\"TrendsList_listItem__BfCtu\"};","import { useLocation } from 'react-router-dom';\nimport css from './TrendsList.module.css';\nimport { StyledLink } from 'components/styled';\nimport PropTypes from 'prop-types';\n\nconst TrendList = ({ trends }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className={css.list}>\n        {trends.map(trend =>\n          trend.title ? (\n            <li className={css.listItem} key={trend.id}>\n              <StyledLink to={`/movies/${trend.id}`} state={{ from: location }}>\n                <p>{trend.title}</p>\n              </StyledLink>\n            </li>\n          ) : null\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default TrendList;\n\nTrendList.propTypes = {\n  trends: PropTypes.array,\n};\n","import Loader from 'components/Loader/Loader';\nimport TrendsList from 'components/TrendsList/TrendsList';\nimport { Container } from 'components/styled';\nimport { useEffect, useState } from 'react';\nimport { getTrends } from 'services/getMovies';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrends();\n        setTrends(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n\n      {!isLoading && trends && (\n        <Container>\n          <h2>Trending today</h2>\n\n          <TrendsList trends={trends} />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNGZmMTg3MzZjZTY2MDU0OTFjOGRiOGU5NTM4ZmNiZiIsInN1YiI6IjY0YWFhYTI0YjY4NmI5MDBhZjllMzAzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZFHoZbG_T5mmqJXFYzBCzmy8I8U9mbqm_qZxq2TKF-I',\n  },\n};\n\nexport const getTrends = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const getMovies = async query => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n\n  const { results } = respons.data;\n\n  return results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const { data } = response;\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["trends","location","useLocation","className","css","map","trend","title","to","id","state","from","useState","setTrends","error","setError","isLoading","setIsLoading","useEffect","fetchData","getTrends","data","Loader","TrendsList","options","method","headers","accept","Authorization","axios","response","results","getMovies","query","respons","getMoviesDetails","movieId","getMoviesCredits","cast","getMoviesReviews"],"sourceRoot":""}