{"version":3,"file":"static/js/217.574e8b79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCards.module.css?fc21","components/MovieCard/MovieCard.jsx","components/NavMovieDetails/NavMovieDetails.jsx","pages/MovieDetails.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieCards_movieCard__dVpF5\",\"img\":\"MovieCards_img__+U2i1\",\"title\":\"MovieCards_title__PbxdW\",\"text\":\"MovieCards_text__G2m-O\",\"titleSecond\":\"MovieCards_titleSecond__6JzFx\",\"genres\":\"MovieCards_genres__VDqBQ\",\"genre\":\"MovieCards_genre__P0OuG\"};","import css from '../MovieCard/MovieCards.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ title, overview, img, userScore, genres }) => {\n  const formatUserScore = Math.round(userScore) * 10;\n\n  return (\n    <div className={css.movieCard}>\n      <img\n        className={css.img}\n        src={`https://image.tmdb.org/t/p/w200${img}`}\n        alt={title}\n      />\n      <div>\n        <h2 className={css.title}>{title}</h2>\n        <p className={css.text}>\n          <span>User Score:</span>\n          {formatUserScore}%\n        </p>\n        <h3 className={css.titleSecond}>Owerview</h3>\n        <p className={css.text}>{overview}</p>\n        <h3 className={css.titleSecond}>Genres</h3>\n        <div className={css.genres}>\n          {genres.map(genre => (\n            <p className={css.genre} key={genre.id}>\n              {genre.name}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  img: PropTypes.string,\n  userScore: PropTypes.number,\n  genres: PropTypes.array,\n};\n","import { StyledLink } from 'components/styled';\n\nconst { Outlet } = require('react-router-dom');\n\nconst NavMoviedetails = ({ movieId }) => {\n  return (\n    <>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to={`/movies/${movieId}/reviews`}>Reviews</StyledLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default NavMoviedetails;\n","import Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport NavMoviedetails from 'components/NavMovieDetails/NavMovieDetails';\nimport { ButtonLink, Container } from 'components/styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMoviesDetails } from 'services/getMovies';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const response = await getMoviesDetails(movieId);\n\n        setMovie(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n  return (\n    <>\n      <Container>\n        <ButtonLink to={location.state?.from ?? '/'}>Go Back</ButtonLink>\n        {isLoading && <Loader />}\n        {error && <div>{error}</div>}\n        {movie && (\n          <>\n            <MovieCard\n              title={movie.title}\n              overview={movie.overview}\n              img={movie.poster_path}\n              id={movie.id}\n              userScore={movie.vote_average}\n              genres={movie.genres}\n            />\n            <NavMoviedetails movieId={movie.id} />\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNGZmMTg3MzZjZTY2MDU0OTFjOGRiOGU5NTM4ZmNiZiIsInN1YiI6IjY0YWFhYTI0YjY4NmI5MDBhZjllMzAzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZFHoZbG_T5mmqJXFYzBCzmy8I8U9mbqm_qZxq2TKF-I',\n  },\n};\n\nexport const getTrends = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const getMovies = async query => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n\n  const { results } = respons.data;\n\n  return results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const { data } = response;\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["title","overview","img","userScore","genres","formatUserScore","Math","round","className","css","src","alt","map","genre","name","id","Outlet","require","movieId","to","useState","movie","setMovie","error","setError","isLoading","setIsLoading","useParams","location","useLocation","useEffect","fetchData","getMoviesDetails","response","message","state","from","Loader","poster_path","vote_average","options","method","headers","accept","Authorization","getTrends","axios","results","data","getMovies","query","respons","getMoviesCredits","cast","getMoviesReviews"],"sourceRoot":""}