{"version":3,"file":"static/js/887.f69fce1e.chunk.js","mappings":"oOAsBA,EApBiB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAClB,OACE,8BACGA,EAAMC,KAAI,SAAAC,GAAI,OACbA,EAAKC,cACH,2BACE,gBACEC,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,QAEZ,uBAAIJ,EAAKI,QAET,uBAAIJ,EAAKK,cAPFL,EAAKM,IASZ,IAXS,KAepB,E,oCCqBD,EAnCa,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMI,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAiBJ,GAF1B,OAERK,EAFQ,OAIdV,EAAWU,GAJG,gDAMdR,EAAS,KAAMS,SAND,yBAQdP,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACS,EAAA,EAAD,IACbX,IAAS,yBAAMA,KAChB,yBACE,SAAC,EAAD,CAAUZ,MAAOU,QAIxB,C,+LCrCKc,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAS,mCAAG,sGACAC,EAAAA,EAAAA,IACrB,+DACAN,GAHqB,cACjBH,EADiB,OAKfU,EAAYV,EAASW,KAArBD,QALe,kBAOhBA,GAPgB,2CAAH,qDAUTE,EAAS,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,0DAC+BI,EAD/B,8CAEpBV,GAHqB,cACjBW,EADiB,OAMfJ,EAAYI,EAAQH,KAApBD,QANe,kBAQhBA,GARgB,2CAAH,sDAWTK,EAAgB,mCAAG,WAAMpB,GAAN,yFACPc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,mBAErBQ,GAH4B,cACxBH,EADwB,OAKtBW,EAASX,EAATW,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBZ,EAAgB,mCAAG,WAAMJ,GAAN,yFACPc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,2BAErBQ,GAH4B,cACxBH,EADwB,OAKtBnB,EAASmB,EAASW,KAAlB9B,KALsB,kBAMvBA,GANuB,2CAAH,sDAShBmC,EAAgB,mCAAG,WAAMrB,GAAN,yFACPc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,kCAErBQ,GAH4B,cACxBH,EADwB,OAKtBU,EAAYV,EAASW,KAArBD,QALsB,kBAMvBA,GANuB,2CAAH,qD","sources":["components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","services/getMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst CastItem = ({ casts }) => {\n  return (\n    <>\n      {casts.map(cast =>\n        cast.profile_path ? (\n          <li key={cast.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n              alt={cast.name}\n            />\n            <p>{cast.name}</p>\n\n            <p>{cast.character}</p>\n          </li>\n        ) : null\n      )}\n    </>\n  );\n};\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  casts: PropTypes.array,\n};\n","import CastItem from 'components/CastItem/CastItem';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredits } from 'services/getMovies';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const response = await getMoviesCredits(movieId);\n\n        setCredits(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      <ul>\n        <CastItem casts={credits} />\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNGZmMTg3MzZjZTY2MDU0OTFjOGRiOGU5NTM4ZmNiZiIsInN1YiI6IjY0YWFhYTI0YjY4NmI5MDBhZjllMzAzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZFHoZbG_T5mmqJXFYzBCzmy8I8U9mbqm_qZxq2TKF-I',\n  },\n};\n\nexport const getTrends = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const getMovies = async query => {\n  const respons = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n\n  const { results } = respons.data;\n\n  return results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const { data } = response;\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["casts","map","cast","profile_path","src","alt","name","character","id","useState","credits","setCredits","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getMoviesCredits","response","message","Loader","options","method","headers","accept","Authorization","getTrends","axios","results","data","getMovies","query","respons","getMoviesDetails","getMoviesReviews"],"sourceRoot":""}